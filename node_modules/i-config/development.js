module.exports = {
	remote:{
			host: "www.bet365.it",
			path: "/home/inplayapi/Sportsbook.asp?lid=6&zid=0&pd=%23AS%23B1%23&wg=0&cid=97&ctid=97",
			headers: {
			    'User-Agent': 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.13) Gecko/20080311 Firefox/2.0.0.13'
			  }
		},
	time_to_wait:1000,	//sleep after job

	amqp:{
		host: localhost,
		port: 1222,
		options:{
			durability, // - messages may be kept in memory, written to disk, or even committed to a DBMS if the need for reliability indicates a more resource-intensive solution.
			decurity, // - which applications should have access to these messages?
			message_purging, // - queues or messages may have a "time to live"
			message_filtering, // - some systems support filtering data so that a subscriber may only see messages matching some pre-specified criteria of interest
			delivery,//  - do we need to guarantee that a message is delivered at least once, or no more than once?
			routing, // - in a system with many queue servers, what servers should receive a message or a queue's messages?
			batching,// - should messages be delivered immediately? Or should the system wait a bit and try to deliver many messages at once?
			queuing_criteria,// - when should a message be considered "enqueued"? When one queue has it? Or when it has been forwarded to at least one remote queue? Or to all queues?
			receipt_notification,// - A publisher may need to know when some or all subscribers have received a message.
		}

	}
};

